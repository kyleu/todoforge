# Content managed by Project Forge, see [projectforge.md] for details.
# http://goreleaser.com
project_name: todoforge

archives:
  - format: zip
    wrap_in_directory: "false"
    files:
      - none*

brews:
  -
    repository:
      owner: "kyleu"
      name: "homebrew-kyleu"
    commit_author:
      name: "Kyle U"
      email: "todoforge@kyleu.com"
    folder: Formula
    homepage: "https://github.com/kyleu/todoforge"
    description: "This app is pretty much totally generated via Project Forge"
    license: "CC0"
    skip_upload: "false"
    install: "bin.install \"todoforge\""

changelog:
  skip: true

checksum:
  name_template: "checksums.txt"
  extra_files:
    - glob: "./build/dist/*_desktop.dmg"
    - glob: "./build/dist/*_desktop.zip"
    - glob: "./build/dist/*_aar.zip"
    - glob: "./build/dist/*_apk.zip"
    - glob: "./build/dist/*_framework.zip"
    - glob: "./build/dist/*_app.zip"
    - glob: "./build/dist/*_notarized.zip"
    # $PF_SECTION_START(checksums)$
    # $PF_SECTION_END(checksums)$

dockers:
  -
    image_templates:
      - "ghcr.io/kyleu/todoforge:{{ trimprefix .Tag \"v\" }}"
      - "ghcr.io/kyleu/todoforge:latest"
    dockerfile: ./tools/release/Dockerfile.release
  -
    image_templates:
      - "ghcr.io/kyleu/todoforge:{{ trimprefix .Tag \"v\" }}-debug"
      - "ghcr.io/kyleu/todoforge:latest-debug"
    dockerfile: ./tools/release/Dockerfile.debug

dist: "build/dist"

nfpms:
  -
    vendor: "Kyle U"
    homepage: "https://github.com/kyleu/todoforge}"
    maintainer: "Kyle U <todoforge@kyleu.com>"
    description: "This app is pretty much totally generated via Project Forge"
    license: "CC0"
    formats:
      - apk
      - deb
      - rpm

release:
  draft: false
  header: |
    ## {{ .Version }} ({{ .Date }})
    See https://github.com/kyleu/todoforge for download links and documentation
    ## Main downloads
    - [Linux Intel 64 bit](https://github.com/kyleu/todoforge/releases/download/{{ .Tag }}/todoforge_{{ .Version }}_linux_amd64.zip)
    - [MacOS Universal](https://github.com/kyleu/todoforge/releases/download/{{ .Tag }}/todoforge_{{ .Version }}_darwin_all.zip)
    - [Windows Intel 64 bit](https://github.com/kyleu/todoforge/releases/download/{{ .Tag }}/todoforge_{{ .Version }}_windows_amd64.zip)

  extra_files:
    - glob: "./build/dist/*.dmg"
    - glob: "./build/dist/*_desktop.zip"
    - glob: "./build/dist/*_aar.zip"
    - glob: "./build/dist/*_apk.zip"
    - glob: "./build/dist/*_framework.zip"
    - glob: "./build/dist/*_app.zip"
    - glob: "./build/dist/*_notarized.zip"
    # $PF_SECTION_START(releasefiles)$
    # $PF_SECTION_END(releasefiles)$

sboms:
  - artifacts: archive

signs:
  - artifacts: checksum

snapcrafts:
  -
    publish: false
    summary: "A Test application, built with Project Forge"
    description: "This app is pretty much totally generated via Project Forge"
    grade: stable
    confinement: strict
    license: "CC0"

snapshot:
  name_template: "{{ .Tag }}"

source:
  enabled: true
  name_template: "{{ .ProjectName }}_{{ .Version }}_source"
  format: "zip"

universal_binaries:
- id: "darwin"
  replace: false
  name_template: '{{ .ProjectName }}'
  hooks:
    # This is a good place to put one-time use scripts
    post:
      - "./bin/build/android.sh {{ .Version }}"
      - "./bin/build/ios.sh {{ .Version }}"
      - "./bin/build/desktop.release.sh {{ .Version }}"
      - "./tools/notarize/notarize.sh"
      # $PF_SECTION_START(extrascripts)$
      # $PF_SECTION_END(extrascripts)$

builds:
  - id: "darwin"
    goos:
      - darwin
    goarch:
      - "amd64"
      - "arm64"
    mod_timestamp: "{{ .CommitTimestamp }}"

  - id: "linux"
    goos:
      - "linux"
    goarch:
      - "386"
      - "amd64"
      - "arm64"
    mod_timestamp: "{{ .CommitTimestamp }}"

  - id: "linux-arm"
    goos:
      - "linux"
    goarch:
      - "arm"
    goarm:
      - "5"
      - "6"
      - "7"
    mod_timestamp: "{{ .CommitTimestamp }}"

  - id: "linux-mips"
    goos:
      - "linux"
    goarch:
      - "mips"
      - "mipsle"
      - "mips64"
      - "mips64le"
    gomips:
      - "hardfloat"
      - "softfloat"
    mod_timestamp: "{{ .CommitTimestamp }}"

  - id: "linux-odd"
    goos:
      - "linux"
    goarch:
      - "loong64"
      - "ppc64"
      - "ppc64le"
      - "riscv64"
      - "s390x"
    mod_timestamp: "{{ .CommitTimestamp }}"

  - id: "windows"
    goos:
      - "windows"
    goarch:
      - "amd64"
    mod_timestamp: "{{ .CommitTimestamp }}"

  - id: "windows_386"
    goos:
      - "windows"
    goarch:
      - "386"
    mod_timestamp: "{{ .CommitTimestamp }}"

  - id: "windows-arm"
    goos:
      - "windows"
    goarch:
      - "arm"
      - "arm64"
    goarm:
      - "5"
      - "6"
      - "7"
    mod_timestamp: "{{ .CommitTimestamp }}"

  - id: "dragonfly"
    goos:
      - "dragonfly"
    goarch:
      - "amd64"
    mod_timestamp: "{{ .CommitTimestamp }}"

  - id: "illumos"
    goos:
      - "illumos"
    goarch:
      - "amd64"
    mod_timestamp: "{{ .CommitTimestamp }}"

  - id: "freebsd"
    goos:
      - "freebsd"
    goarch:
      - "386"
      - "amd64"
      - "arm"
      - "arm64"
    goarm:
      - "5"
      - "6"
      - "7"
    mod_timestamp: "{{ .CommitTimestamp }}"

  - id: "netbsd"
    goos:
      - "netbsd"
    goarch:
      - "386"
      - "amd64"
      - "arm"
      - "arm64"
    goarm:
      - "7"
    mod_timestamp: "{{ .CommitTimestamp }}"

  - id: "openbsd"
    goos:
      - "openbsd"
    goarch:
      - "386"
      - "amd64"
      - "arm"
      - "arm64"
    goarm:
      - "5"
      - "6"
      - "7"
    mod_timestamp: "{{ .CommitTimestamp }}"

  - id: "plan9"
    goos:
      - "plan9"
    goarch:
      - "386"
      - "amd64"
      - "arm"
      - "arm64"
    goarm:
      - "5"
      - "6"
      - "7"
    mod_timestamp: "{{ .CommitTimestamp }}"

  - id: "solaris"
    goos:
      - "solaris"
    goarch:
      - "amd64"
    mod_timestamp: "{{ .CommitTimestamp }}"
